angular.module("angularMapbox",[]).directive("featureLayer",function(){return{restrict:"E",require:"^mapbox",link:function(scope,element,attrs,controller){attrs.data?controller.getMap().then(function(map){var geojsonObject=scope.$eval(attrs.data),featureLayer=L.mapbox.featureLayer(geojsonObject).addTo(map);controller.$scope.featureLayers.push(featureLayer)}):attrs.url&&controller.getMap().then(function(map){var featureLayer=L.mapbox.featureLayer().addTo(map);featureLayer.loadURL(attrs.url),controller.$scope.featureLayers.push(featureLayer)})}}}),angular.module("angularMapbox",[]).directive("mapbox",["$compile","$q",function($compile,$q){var _mapboxMap;return{restrict:"E",transclude:!0,scope:!0,replace:!0,link:function(scope,element,attrs){scope.map=L.mapbox.map(element[0],attrs.mapId),_mapboxMap.resolve(scope.map);var zoom=attrs.zoom||12;attrs.lat&&attrs.lng&&scope.map.setView([attrs.lat,attrs.lng],zoom)},template:'<div class="angular-mapbox-map" ng-transclude></div>',controller:["$scope",function($scope){$scope.markers=[],$scope.featureLayers=[],_mapboxMap=$q.defer(),$scope.getMap=this.getMap=function(){return _mapboxMap.promise},this.$scope=$scope}]}}]),angular.module("angularMapbox").directive("marker",["$compile",function($compile){return{restrict:"E",require:"^mapbox",transclude:!0,scope:!0,link:function(scope,element,attrs,controller,transclude){function setStyleOptions(attrs,default_opts){var opts=default_opts||{};return attrs.size&&(opts["marker-size"]=attrs.size),attrs.color&&(opts["marker-color"]=attrs.color),attrs.symbol&&(opts["marker-symbol"]=attrs.symbol),opts}var opts={draggable:void 0!=attrs.draggable},style=setStyleOptions(attrs),addMarker=function(map,latlng,popupContent,opts,style){opts=opts||{};var marker=L.mapbox.marker.style({properties:style},latlng);popupContent&&popupContent.length>0&&marker.bindPopup(popupContent),marker.addTo(map),opts.draggable&&marker.dragging.enable(),controller.$scope.markers.push(marker)},removeMarker=function(map,latlng){for(var i=0;i<controller.$scope.markers.length;i++)controller.$scope.markers[i].getLatLng().equals(L.latLng(latlng))&&(map.removeLayer(controller.$scope.markers[i]),controller.$scope.markers.splice(i,1),i--)},addCurrentLocation=function(map,popupContent,opts,style){var style=setStyleOptions(attrs,{"marker-color":"#000","marker-symbol":"star"});map.on("locationfound",function(e){addMarker(map,[e.latlng.lat,e.latlng.lng],null,opts,style)}),map.locate()};controller.getMap().then(function(map){map.on("popupopen",function(){var popup=angular.element(document.getElementsByClassName("leaflet-popup-content"));$compile(popup)(scope),scope.$$phase||scope.$digest()}),setTimeout(function(){for(var popupHTML="",transcluded=transclude(scope,function(){}),i=0;i<transcluded.length;i++)void 0!=transcluded[i].outerHTML&&(popupHTML+=transcluded[i].outerHTML);if(void 0!=attrs.currentLocation)addCurrentLocation(map,null,opts,style);else{var popup=angular.element(popupHTML);$compile(popup)(scope),scope.$$phase||scope.$digest();for(var newPopupHTML="",i=0;i<popup.length;i++)newPopupHTML+=popup[i].outerHTML;addMarker(map,[attrs.lat,attrs.lng],newPopupHTML,opts,style),element.bind("$destroy",function(){removeMarker(map,[attrs.lat,attrs.lng])})}},0)})}}}]);

var angularMapboxExample = angular.module('angular-mapbox-example', ['angularMapbox']);

angularMapboxExample.controller('demoController', function($scope) {
console.log('here');
});